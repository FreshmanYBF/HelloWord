

/* ==================================================
	Chapter XV			实体与编码
==================================================== */

HTTP如何确保它的报文被正确地传送、识别、提取以及适当处理
	（1）Content-Type，媒体格式；Content-Language，语言，以便浏览器和其他客户端能够正确处理内容
	（2）Content-Length，Content-Encoding，确保被正确解包
	（3）符合用户的需要 —— Accept首部
	（4）快速有效的传输 —— 数据压缩，范围请求，差异编码
	（5）完整达到 
	
本节内容
	（1）报文实体有哪些格式
	（2）如何描述主体的大小
	（3）使用了哪些实体首部来描述内容的格式、字母和语言
	（4）可逆的内容编码 —— 比如压缩
	（5）传输编码和分块编码
	（6）范围请求
	（7）HPPT差异编码扩展
	（8）实体主体校验和

	
1、报文和实体

HTTP/1.1定义了10个基本的首部字段
	（1）Content-Type —— 实体中所承载对象的类型
	（2）Content-Length —— 实体主体的长度或大小
	（3）Content-Lanuage —— 传送对象最匹配的人类语言
	（4）Content-Encoding —— 对数据所做的任意变化，比如压缩
	（5）Content-Location —— 一个备用位置，请求时可以通过它获得对象
	（6）Content-Range —— 范围请求
	（7）Content-MD5 —— 主体内容校验和
	（8）Last-Modified —— 最后修改的日期时间
	（9）Expires —— 实体数据将要失效的日期时间
	（10）Allow —— 资源允许的方法
	（11）ETag —— 这份文档特定实例的唯一验证码
	（12）Cache-Control —— 如何缓存该文档
	
实体主体 
	首部字段以一个空白的 CRLF 行结束，随后就是实体主体的原始内容
	
	
2、Content-Length: 实体的大小

Content-Length 首部是为了能够 —— 检测出服务器崩溃而导致的报文截尾
								 并对共享持久连接的多个报文进行正确分段
								 
（1）确定实体主体长度的规则
	对于不携带实体的报文，忽略Content-Length，不使用它的值
	如果报文中含有描述  传输编码的 Transfer-Encoding 首部 ，那实体就应该以一个称为 “零字节块” 的特殊模式结束
	如果有Content-Length，没有Transfer-Encoding，那么就使用Content-Length
	如果有Content-Length，也有Transger-Encoding，那么用Transfer-Encoding 
	如果使用了 multipart/byteranges 媒体类型，那么么个部分都要说明自己的大小
	上述规则都不匹配，则关闭连接
								
3、实体摘要
								
Content-MD5首部发送对实体主体运行MD5算法的结果 —— 实体是 HTTP 中报文实体

4、媒体类型和字符集

Content-Type首部字段说明了实体主体的MIME类型
	MIME类型由一个 主媒体类型 后面跟一条斜线以及一个 子类型 组成

常用媒体类型	
	text/html
	text/plain

	image/gif
	image/jpeg

	audio/x-wav

	model/vrml  三维的VRML模型

	application/vnd.ms-powerpoint   

	multipart/byteranges  

	message/http				
							
（1）文本的字符编码
Content-Type首部还支持可选的参数来进一步说明内容的类型。
	charset(字符集)  charset=iso-8859-4 
	
（2）多部分媒体类型
multipart(多部分)电子邮件报文中包含多个报文，
	它们合在一起作为单一的复杂报文发送
	每一部分都是独立的，有各自的描述其内容的集；不同的部分之间用 分界字符串 连接在一起
	
HTTP也支持多部分主体。 —— 表格 或 作为承载若干文档片段的响应范围

（3）多部分表格提交
Content-Type: multipart/form-data 或 Content-Type: multipart/mixed 

Content-Type: multipart/form-data; boundary=xxxx

（4）多部分范围响应

Content-Type: multipart/byteranges 首部和带有不同范围的多部分主体

对文档不同范围的请求产生的响应

5、内容编码

HTTP应用程序有时在发送前需要对内容进行编码。

（1）内容编码过程
	生成原始报文，其中有原始的Content-Type和Content-Length首部
	内容编码服务器创建编码后的报文，Content-Type不变，设置新的Content-Length，同时增加  Content-Encoding  首部
	接收程序得到编码后的报文，进行解码，获得原始报文
（2）内容编码类型
	gzip				实体采用GNU zip编码
	compress			实体采用Unix的文件压缩程序
	deflate				实体用zlib的格式压缩的
	identity			实体没有进行编码
（3）Accept-Encoding首部
客户端把自己支持的内容编码方式列表放在请求的Accept-Encoding首部里发出去
	使用 * 表示支持任何编码方式：Accept-Encoding: *
	

6、传输编码和分块编码

传输编码是为了改变报文中的数据在网络上传输的方式 —— 与内容的格式无关(比如文本或者图片等格式无关)
	经过传输编码，编码作用在整个报文上，报文自身的结构变化发生了改变

HTTP/1.1 200 OK
Transfer-encoding: chunked

（1）可靠传输
	未知尺寸 —— 如果不先生成内容，某些网关和内容编码器就无法确定报文主体的最终大小
				使用传输编码发送数据，并用特别的结束脚注表明数据结束
	安全性 —— 可以用传输编码把报文内容扰乱，然后在共享网络上传输。(被SSL淘汰)
	
（2）Transfer-Encoding首部 
最新的HTTP规范只定义了一种传输编码，就是 分块编码 
	如果未来扩展了新的传输需求，那分块编码应该作用于它们之上，作为“隧道”

（3）分块编码 
分块编码 —— 把报文分割为若干个   大小已知的块
			块之间是紧挨着发送，这样就不需要在发送之前知道整个报文的大小了

	分块与持久连接
		分块编码报文，由起始的HTTP响应首部块开始，随后就是一系列分块
					  每个分块包含一个长度值和该分块的数据
					  长度值(单位字节)是十六进制形式并将CRLF与数据分隔开
					  最后一个块长度值为0，表示主体结束
	分块报文的拖挂
		拖挂 —— 在分块报文的最后加上拖挂
				拖挂用于在报文发送完后才能确定的首部
		HTTP首部使用Trailer 表示需要拖挂的字段
			比如Content-MD5，只有文档全部生成后才能确定
				Content-Length也是如此

（4）内容编码与传输编码的结合
使用内容编码进行压缩，使用传输编码进行分块发送

（5）传输编码的规则
	传输编码集合中必须包括“分块”
	当使用分块编码时，它必须最后一个作用到报文主体上
	分块传输编码不能多次作用到同一个报文主体上
	
7、随时间变化的实例

8、验证码和新鲜度
（1）新鲜度：内容缓存多长时间
（2）有条件的请求：以 If- 开头的首部实现
（3）验证码：每个有条件的请求都通过 “ 验证码 ” 发挥作用
		验证码时文档实例的一个特殊属性，用它来测试条件是否为真
	
9、范围请求
请求实体的一个范围
	在P2P中应用广泛，从不同的对等实体同时下载多媒体文件的不同部分
使用Range首部请求（可以是多个Range），使用一个多部份主体及Content-Type: multipart/byteranges首部响应

10、差异编码
差异编码可以减少传输次数，但是实现起来比较麻烦


/* ==================================================
	Chapter XVI			国际化
==================================================== */

HTTP要能够传输和处理多种语言和字母表编写的国际性文档

网站国际化的两个主要问题：字符集编码和语言标记

	HTTP如何与多语言字母表的方案和相关标准进行交互
	术语
	语言命名系统和语言标记
	国际URI规则
	日期和其他国际化方面问题
	
1、HTTP对国际性内容的支持

服务器
	Content-Type首部的charset参数 —— 字母表
	Content-Language —— 语言 
客户端
	Accept-Charset首部 
	Accept-Language首部

2、字符集与HTTP 
字符编码方案和已编码字符集组成了一个MIME字符集
MIME charset 
	us-ascii
	iso-8859-1 
	iso-8859-2 
	utf-8 
	windows-1252
	
3、多语言字符编码入门
（1）字符集术语
	字符 
	字形
	编码后的字符  —— 分配给字符的唯一数字编号
	代码空间 —— 计划用于字符代码值的整数范围
	代码宽度 —— 每个字符代码所用的位数 
	字符集 
	编码后的字符集 
	字符编码方案 —— 固定宽度；可变宽度

4、语言标记与HTTP

5、国际化的URI

目前使用最小字符集合来表示URI，实现URI的共享
	URI转义只是针对 0~127 的US-ASCII代码在值进行转义，反转义也是如此
	
6、其他需要考虑的地方

（1）HTTP首部必须由 US-ASCII 字符集中的字符构成 —— 有协议C/S可能并没有遵守
（2）HTTP规范中明确定义了合法的GMT日期格式
 

 

/* ==================================================
	Chapter XVII	内容协商与转码
==================================================== */

内容协商 —— 一个URL常常需要代表不同的资源，客户端需要哪种资源，服务器应该发送哪个版本，可以通过协商实现

客户端驱动协商 —— 客户端发起请求，服务器返回可选列表，客户端选择
服务器驱动协商 —— 服务器检查客户端请求首部集并决定提供哪个版本的页面
透明 —— 中间设备代表客户端进行协商

1、客户端驱动协商

需要获取列表，再根据列表发起请求，过于繁琐

2、服务器驱动协商

可供HTTP服务器评估发送什么响应给客户端的两种机制
	（1）检查内容协商首部集。
			服务器查看客户端发送的Accept首部集，设法用相应的响应首部与之匹配
	（2）根据其他（非内容协商）首部进行变通
			比如服务器可以根据客户端发送的User-Agent首部来发送响应

内容协商首部
	Accept —— 媒体类型
	Accept-Language —— 语言 
	Accept-Charset —— 字符集 
	Accept-Encoding —— 编码方式 

服务器响应的实体首部
	Content-Type 			对应		Accept 
	Content-Language    	对应		Accept-Language
	Content-Type的charset	对应 		Accept-Charset 
	Content-Encoding			对应		Accept-Encoding 


3、透明协商

使用中间代理来代表客户端
	服务器必须有能力告知代理，服务器需要检查哪些请求首部。以便对客户端的请求进行最佳匹配
	服务器在响应中发送Vary首部，以告知中间节点需要哪些请求首部进行内容协商

4、转码 

转码 —— 服务器把文档转换称客户端可用的文档

比如 
	HTML文档							WML文档
	高分辨率图像						低分辨率图像
	彩色图像							黑白图像
	有多个框架的复杂页面				没有很多框架或图像的简单页面
	有Java小应用程序的HTMP页面			没有Java小应用程序的HTML页面
	有广告的页面						去除广告的页面

三种类别转码
	（1）格式转换
	（2）信息综合 —— 提取关键信息 
	（3）内容注入 —— 自动广告生成器，用户追踪系统
